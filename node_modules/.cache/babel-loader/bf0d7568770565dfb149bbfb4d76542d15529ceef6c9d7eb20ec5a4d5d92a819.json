{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"app\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Post page absolutely vue \", -1 /* HOISTED */);\nconst _hoisted_3 = {\n  class: \"app_btns\"\n};\nconst _hoisted_4 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_my_button = _resolveComponent(\"my-button\");\n  const _component_post_form = _resolveComponent(\"post-form\");\n  const _component_my_dialog = _resolveComponent(\"my-dialog\");\n  const _component_my_select = _resolveComponent(\"my-select\");\n  const _component_post_list = _resolveComponent(\"post-list\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_my_button, {\n    class: \"btn_form_dialog\",\n    onClick: $options.showDialog\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"Create post \")]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_my_dialog, {\n    show: $data.dialogVisible,\n    \"onUpdate:show\": _cache[0] || (_cache[0] = $event => $data.dialogVisible = $event)\n  }, {\n    default: _withCtx(() => [_createVNode(_component_post_form, {\n      onCreate: $options.createPost\n    }, null, 8 /* PROPS */, [\"onCreate\"])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"show\"]), _createVNode(_component_my_select, {\n    modelValue: $data.selectedSort,\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.selectedSort = $event),\n    options: $data.sortOptions\n  }, null, 8 /* PROPS */, [\"modelValue\", \"options\"])]), !$data.isPostLoading ? (_openBlock(), _createBlock(_component_post_list, {\n    key: 0,\n    posts: $data.posts,\n    onRemove: $options.removePost\n  }, null, 8 /* PROPS */, [\"posts\", \"onRemove\"])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_4, \"Loading...\"))]);\n}","map":{"version":3,"mappings":";;EACKA,KAAK,EAAC;AAAK;gCACZC,oBAAkC,YAA9B,2BAAyB;;EACxBD,KAAK,EAAC;AAAU;;;;;;;;;;uBAFzBE,oBAsBM,OAtBNC,UAsBM,GArBFC,UAAkC,EAClCH,oBAUM,OAVNI,UAUM,GATFC,aAIYC;IAHZP,KAAK,EAAC,iBAAiB;IACtBQ,OAAK,EAAEC;;sBACP,MACD,kBADC,cACD;;kCACAH,aAEYI;IAFOC,IAAI,EAAEC,mBAAa;yDAAbA,mBAAa;;sBAClC,MAAiC,CAAjCN,aAAiCO;MAArBC,QAAM,EAAEL;IAAU;;+BAElCH,aAA0DS;gBAAtCH,kBAAY;+DAAZA,kBAAY;IAAGI,OAAO,EAAEJ;yDAOzCA,mBAAa,kBAHpBK,aAIEC;;IAHKC,KAAK,EAAEP,WAAK;IACdQ,QAAM,EAAGX;mEAGdP,oBAA4B,mBAAhB,YAAU","names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_createVNode","_component_my_button","onClick","$options","_component_my_dialog","show","$data","_component_post_form","onCreate","_component_my_select","options","_createBlock","_component_post_list","posts","onRemove"],"sourceRoot":"","sources":["/home/hugeatom/Code/vue/want_money/src/App.vue"],"sourcesContent":["<template>\n<div class=\"app\">\n    <h1>Post page absolutely vue </h1>\n    <div class='app_btns'>\n        <my-button\n        class=\"btn_form_dialog\"\n        @click=\"showDialog\" \n        >Create post\n        </my-button>\n        <my-dialog v-model:show=\"dialogVisible\" >\n            <post-form @create=\"createPost\"/>\n        </my-dialog>\n        <my-select v-model=\"selectedSort\" :options=\"sortOptions\"/>   \n    </div>\n    \n    \n    <post-list \n    v-bind:posts=\"posts\"\n    v-on:remove =\"removePost\"\n    v-if=\"!isPostLoading\"\n    />\n    <div v-else>Loading...</div>\n    \n</div>\n\n</template>\n\n<script>\nimport  PostList  from \"@/components/PostList.vue\";\nimport  PostForm  from \"./components/PostForm.vue\";\nimport axios from 'axios';\n\n\n\nexport default {\n    components:{\n        PostList, PostForm\n    },\n    data() {\n        return {\n            posts: [],\n            dialogVisible: false,\n            isPostLoading: false,\n            selectedSort: \"\",\n            sortOptions: [\n            {value:'title', name:'By name'},\n            {value:'body', name:'By content'}\n            ],\n        }\n    },\n    methods:{\n        createPost(post){\n            this.posts.push(post);\n            this.dialogVisible = false;\n            \n        },\n        removePost(post) {\n            this.posts = this.posts.filter(p => p.id !== post.id)\n        },\n        showDialog() {\n            this.dialogVisible = true;\n        },\n        async fetchPosts() {\n            try{\n                this.isPostLoading = true\n                setTimeout(async () => {\n                    const response = await axios.get('https://jsonplaceholder.typicode.com/posts?_limit=10');\n                    this.posts = response.data; \n                    this.isPostLoading = false\n\n                }, 2000)\n               \n            }catch (e) {\n                alert('Error')\n            } finally {\n            }\n        },\n        \n        \n    },\n    mounted() {\n            this.fetchPosts();\n        },\n}\n</script>\n\n<style>\n* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n.app{\n    padding: 20px;\n}\n\n.btn_form_dialog {\n    margin: 20px;\n    margin-left: 0;\n}\n\n.app_btns {\n    display: flex;\n    justify-content: space-between;\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}