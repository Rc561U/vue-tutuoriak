{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport PostList from \"@/components/PostList.vue\";\nimport PostForm from \"./components/PostForm.vue\";\nimport axios from 'axios';\nexport default {\n  components: {\n    PostList,\n    PostForm\n  },\n  data() {\n    return {\n      posts: [],\n      dialogVisible: false,\n      isPostLoading: false\n    };\n  },\n  methods: {\n    createPost(post) {\n      this.posts.push(post);\n      this.dialogVisible = false;\n    },\n    removePost(post) {\n      this.posts = this.posts.filter(p => p.id !== post.id);\n    },\n    showDialog() {\n      this.dialogVisible = true;\n    },\n    async fetchPosts() {\n      try {\n        setTimeout(async () => {\n          const response = await axios.get('https://jsonplaceholder.typicode.com/posts?_limit=10');\n          this.posts = response.data;\n        }, 1000);\n      } catch (e) {\n        alert('Error');\n      }\n    }\n  },\n  mounted() {\n    this.fetchPosts();\n  }\n};","map":{"version":3,"mappings":";AAuBA,OAAQA,QAAO,MAAQ,2BAA2B;AAClD,OAAQC,QAAO,MAAQ,2BAA2B;AAClD,OAAOC,KAAI,MAAO,OAAO;AAIzB,eAAe;EACXC,UAAU,EAAC;IACPH,QAAQ;IAAEC;EACd,CAAC;EACDG,IAAI,GAAG;IACH,OAAO;MACHC,KAAK,EAAE,EAAE;MACTC,aAAa,EAAE,KAAK;MACpBC,aAAa,EAAE;IACnB;EACJ,CAAC;EACDC,OAAO,EAAC;IACJC,UAAU,CAACC,IAAI,EAAC;MACZ,IAAI,CAACL,KAAK,CAACM,IAAI,CAACD,IAAI,CAAC;MACrB,IAAI,CAACJ,aAAY,GAAI,KAAK;IAE9B,CAAC;IACDM,UAAU,CAACF,IAAI,EAAE;MACb,IAAI,CAACL,KAAI,GAAI,IAAI,CAACA,KAAK,CAACQ,MAAM,CAACC,KAAKA,CAAC,CAACC,EAAC,KAAML,IAAI,CAACK,EAAE;IACxD,CAAC;IACDC,UAAU,GAAG;MACT,IAAI,CAACV,aAAY,GAAI,IAAI;IAC7B,CAAC;IACD,MAAMW,UAAU,GAAG;MACf,IAAG;QACCC,UAAU,CAAC,YAAY;UACnB,MAAMC,QAAO,GAAI,MAAMjB,KAAK,CAACkB,GAAG,CAAC,sDAAsD,CAAC;UACxF,IAAI,CAACf,KAAI,GAAIc,QAAQ,CAACf,IAAI;QAC9B,CAAC,EAAE,IAAI;MAEX,CAAC,QAAOiB,CAAC,EAAE;QACPC,KAAK,CAAC,OAAO;MACjB;IACJ;EAEJ,CAAC;EACDC,OAAO,GAAG;IACF,IAAI,CAACN,UAAU,EAAE;EACrB;AACR","names":["PostList","PostForm","axios","components","data","posts","dialogVisible","isPostLoading","methods","createPost","post","push","removePost","filter","p","id","showDialog","fetchPosts","setTimeout","response","get","e","alert","mounted"],"sourceRoot":"","sources":["/home/hugeatom/Code/vue/want_money/src/App.vue"],"sourcesContent":["<template>\n<div class=\"app\">\n    <h1>Post page absolutely vue </h1>\n    <!-- <my-button @click=\"fetchPosts\">Get posts</my-button> -->\n    <my-button\n    @click=\"showDialog\" style=\"margin: 20px;\"\n    >Create post</my-button>\n    <my-dialog v-model:show=\"dialogVisible\" >\n        <post-form @create=\"createPost\"/>\n    </my-dialog>\n    \n    <post-list \n    v-bind:posts=\"posts\"\n    v-on:remove =\"removePost\"\n    v-if=\"!isPostLoading\"\n    />\n    <div v-else>Loading...</div>\n    \n</div>\n\n</template>\n\n<script>\nimport  PostList  from \"@/components/PostList.vue\";\nimport  PostForm  from \"./components/PostForm.vue\";\nimport axios from 'axios';\n\n\n\nexport default {\n    components:{\n        PostList, PostForm\n    },\n    data() {\n        return {\n            posts: [],\n            dialogVisible: false,\n            isPostLoading: false,\n        }\n    },\n    methods:{\n        createPost(post){\n            this.posts.push(post);\n            this.dialogVisible = false;\n            \n        },\n        removePost(post) {\n            this.posts = this.posts.filter(p => p.id !== post.id)\n        },\n        showDialog() {\n            this.dialogVisible = true;\n        },\n        async fetchPosts() {\n            try{\n                setTimeout(async () => {\n                    const response = await axios.get('https://jsonplaceholder.typicode.com/posts?_limit=10');\n                    this.posts = response.data; \n                }, 1000)\n               \n            }catch (e) {\n                alert('Error')\n            }\n        },\n        \n    },\n    mounted() {\n            this.fetchPosts();\n        },\n}\n</script>\n\n<style>\n* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n.app{\n    padding: 20px;\n}\n\n\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}