{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport PostList from \"@/components/PostList.vue\";\nimport PostForm from \"./components/PostForm.vue\";\nimport axios from 'axios';\nexport default {\n  components: {\n    PostList,\n    PostForm\n  },\n  data() {\n    return {\n      posts: [],\n      dialogVisible: false,\n      isPostLoading: false,\n      selectedSort: \"\",\n      sortOptions: [{\n        value: 'title',\n        name: 'By name'\n      }, {\n        value: 'body',\n        name: 'By content'\n      }],\n      searchQuery: \"\",\n      page: 1,\n      limit: 10,\n      totalPages: 0\n    };\n  },\n  methods: {\n    createPost(post) {\n      this.posts.push(post);\n      this.dialogVisible = false;\n    },\n    removePost(post) {\n      this.dialogVisible = false;\n      this.posts = this.posts.filter(p => p.id !== post.id);\n    },\n    showDialog() {\n      this.dialogVisible = true;\n    },\n    async fetchPosts() {\n      try {\n        this.isPostLoading = true;\n        setTimeout(async () => {\n          const response = await axios.get('https://jsonplaceholder.typicode.com/posts', {\n            params: {\n              _page: this.page,\n              _limit: this.limit\n            }\n          });\n          this.totalPages = Math.ceil(response.headers['x-total-count'] / this.limit);\n          this.posts = response.data;\n          this.isPostLoading = false;\n        }, 2000);\n      } catch (e) {\n        alert('Error');\n      } finally {}\n    },\n    changePage(pageNumber) {\n      this.page = pageNumber;\n    }\n  },\n  mounted() {\n    this.fetchPosts();\n  },\n  // watch: {\n  //     selectedSort(newValue){\n  //         this.posts.sort((a,b) => {\n  //             return a[this.selectedSort]?.localeCompare(b[this.selectedSort])\n  //         })\n  //     }\n  // },\n  computed: {\n    sortedPosts() {\n      return [...this.posts].sort((post1, post2) => post1[this.selectedSort]?.localeCompare(post2[this.selectedSort]));\n    },\n    sortedAndSearchedPosts() {\n      return this.sortedPosts.filter(post => post.title.toLowerCase().includes(this.searchQuery.toLowerCase()));\n    }\n  }\n};","map":{"version":3,"mappings":";AAmCA,OAAQA,QAAO,MAAQ,2BAA2B;AAClD,OAAQC,QAAO,MAAQ,2BAA2B;AAClD,OAAOC,KAAI,MAAO,OAAO;AAIzB,eAAe;EACXC,UAAU,EAAC;IACPH,QAAQ;IAAEC;EACd,CAAC;EACDG,IAAI,GAAG;IACH,OAAO;MACHC,KAAK,EAAE,EAAE;MACTC,aAAa,EAAE,KAAK;MACpBC,aAAa,EAAE,KAAK;MACpBC,YAAY,EAAE,EAAE;MAChBC,WAAW,EAAE,CACb;QAACC,KAAK,EAAC,OAAO;QAAEC,IAAI,EAAC;MAAS,CAAC,EAC/B;QAACD,KAAK,EAAC,MAAM;QAAEC,IAAI,EAAC;MAAY,EAC/B;MACDC,WAAW,EAAE,EAAE;MACfC,IAAI,EAAE,CAAC;MACPC,KAAK,EAAE,EAAE;MACTC,UAAU,EAAE;IAChB;EACJ,CAAC;EACDC,OAAO,EAAC;IACJC,UAAU,CAACC,IAAI,EAAC;MACZ,IAAI,CAACb,KAAK,CAACc,IAAI,CAACD,IAAI,CAAC;MACrB,IAAI,CAACZ,aAAY,GAAI,KAAK;IAE9B,CAAC;IACDc,UAAU,CAACF,IAAI,EAAE;MACb,IAAI,CAACZ,aAAY,GAAI,KAAK;MAC1B,IAAI,CAACD,KAAI,GAAI,IAAI,CAACA,KAAK,CAACgB,MAAM,CAACC,KAAKA,CAAC,CAACC,EAAC,KAAML,IAAI,CAACK,EAAE;IACxD,CAAC;IACDC,UAAU,GAAG;MACT,IAAI,CAAClB,aAAY,GAAI,IAAI;IAC7B,CAAC;IACD,MAAMmB,UAAU,GAAG;MACf,IAAG;QACC,IAAI,CAAClB,aAAY,GAAI,IAAG;QACxBmB,UAAU,CAAC,YAAY;UACnB,MAAMC,QAAO,GAAI,MAAMzB,KAAK,CAAC0B,GAAG,CAAC,4CAA4C,EAAE;YAC3EC,MAAM,EAAE;cACJC,KAAK,EAAE,IAAI,CAACjB,IAAI;cAChBkB,MAAM,EAAE,IAAI,CAACjB;YACjB;UACJ,CAAC,CAAC;UACF,IAAI,CAACC,UAAS,GAAIiB,IAAI,CAACC,IAAI,CAACN,QAAQ,CAACO,OAAO,CAAC,eAAe,IAAI,IAAI,CAACpB,KAAK;UAC1E,IAAI,CAACT,KAAI,GAAIsB,QAAQ,CAACvB,IAAI;UAC1B,IAAI,CAACG,aAAY,GAAI,KAAI;QAE7B,CAAC,EAAE,IAAI;MAEX,CAAC,QAAO4B,CAAC,EAAE;QACPC,KAAK,CAAC,OAAO;MACjB,UAAU,CACV;IACJ,CAAC;IACDC,UAAU,CAACC,UAAU,EAAE;MACnB,IAAI,CAACzB,IAAG,GAAIyB,UAAS;IACzB;EAGJ,CAAC;EACDC,OAAO,GAAG;IACF,IAAI,CAACd,UAAU,EAAE;EACrB,CAAC;EACL;EACA;EACA;EACA;EACA;EACA;EACA;EACAe,QAAQ,EAAE;IACNC,WAAW,GAAG;MACV,OAAO,CAAC,GAAG,IAAI,CAACpC,KAAK,CAAC,CAACqC,IAAI,CAAC,CAACC,KAAK,EAACC,KAAK,KAAKD,KAAK,CAAC,IAAI,CAACnC,YAAY,CAAC,EAAEqC,aAAa,CAACD,KAAK,CAAC,IAAI,CAACpC,YAAY,CAAC,CAAC;IAClH,CAAC;IACDsC,sBAAsB,GAAG;MACrB,OAAO,IAAI,CAACL,WAAW,CAACpB,MAAM,CAACH,IAAG,IAAKA,IAAI,CAAC6B,KAAK,CAACC,WAAW,EAAE,CAACC,QAAQ,CAAC,IAAI,CAACrC,WAAW,CAACoC,WAAW,EAAE,CAAC;IAC5G;EACJ;AACJ","names":["PostList","PostForm","axios","components","data","posts","dialogVisible","isPostLoading","selectedSort","sortOptions","value","name","searchQuery","page","limit","totalPages","methods","createPost","post","push","removePost","filter","p","id","showDialog","fetchPosts","setTimeout","response","get","params","_page","_limit","Math","ceil","headers","e","alert","changePage","pageNumber","mounted","computed","sortedPosts","sort","post1","post2","localeCompare","sortedAndSearchedPosts","title","toLowerCase","includes"],"sourceRoot":"","sources":["/home/hugeatom/Code/vue/want_money/src/App.vue"],"sourcesContent":["<template>\n<div class=\"app\">\n    <h1>Post page absolutely vue </h1>\n    <div class=\"app_btns\">\n        <my-button\n        class=\"btn_form_dialog\"\n        @click=\"showDialog\" \n        >Create post\n        </my-button>\n\n        <my-input v-model=\"searchQuery\" placeholder=\"Search\" style=\"width: 200px;d\"/>    \n\n        <my-dialog v-model:show=\"dialogVisible\" >\n            <post-form @create=\"createPost\"/>\n        </my-dialog>\n        <my-select v-model=\"selectedSort\" :options=\"sortOptions\"/>   \n    </div>\n    \n    \n    <post-list \n    v-bind:posts=\"sortedAndSearchedPosts\"\n    v-on:remove =\"removePost\"\n    v-if=\"!isPostLoading\"\n    />\n    <div v-else>Loading...</div>\n    <div class=\"page__wrapper\">\n        <div v-for=\"pageNumber in totalPages\" :key=\"page\" class=\"page\" @click=\"changePage(pageNumber)\" :class=\"{\n            'current-page' : page === pageNumber\n        }\">{{ pageNumber }}</div>\n    </div>\n</div>\n\n</template>\n\n<script>\nimport  PostList  from \"@/components/PostList.vue\";\nimport  PostForm  from \"./components/PostForm.vue\";\nimport axios from 'axios';\n\n\n\nexport default {\n    components:{\n        PostList, PostForm\n    },\n    data() {\n        return {\n            posts: [],\n            dialogVisible: false,\n            isPostLoading: false,\n            selectedSort: \"\",\n            sortOptions: [\n            {value:'title', name:'By name'},\n            {value:'body', name:'By content'}\n            ],\n            searchQuery: \"\",\n            page: 1,\n            limit: 10,\n            totalPages: 0,\n        }\n    },\n    methods:{\n        createPost(post){\n            this.posts.push(post);\n            this.dialogVisible = false;\n            \n        },\n        removePost(post) {\n            this.dialogVisible = false;\n            this.posts = this.posts.filter(p => p.id !== post.id)\n        },\n        showDialog() {\n            this.dialogVisible = true;\n        },\n        async fetchPosts() {\n            try{\n                this.isPostLoading = true\n                setTimeout(async () => {\n                    const response = await axios.get('https://jsonplaceholder.typicode.com/posts', {\n                        params: {\n                            _page: this.page,\n                            _limit: this.limit\n                        }\n                    });\n                    this.totalPages = Math.ceil(response.headers['x-total-count'] / this.limit)\n                    this.posts = response.data; \n                    this.isPostLoading = false\n\n                }, 2000)\n               \n            }catch (e) {\n                alert('Error')\n            } finally {\n            }\n        },\n        changePage(pageNumber) {\n            this.page = pageNumber\n        }\n        \n        \n    },\n    mounted() {\n            this.fetchPosts();\n        },\n    // watch: {\n    //     selectedSort(newValue){\n    //         this.posts.sort((a,b) => {\n    //             return a[this.selectedSort]?.localeCompare(b[this.selectedSort])\n    //         })\n    //     }\n    // },\n    computed: {\n        sortedPosts() {\n            return [...this.posts].sort((post1,post2) => post1[this.selectedSort]?.localeCompare(post2[this.selectedSort]))\n        },\n        sortedAndSearchedPosts() {\n            return this.sortedPosts.filter(post => post.title.toLowerCase().includes(this.searchQuery.toLowerCase()))\n        }\n    }\n}\n</script>\n\n<style>\n* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n.app{\n    padding: 20px;\n}\n\n.btn_form_dialog {\n    margin: 20px;\n    margin-left: 0;\n}\n\n.app_btns {\n    display: flex;\n    justify-content: space-between;\n}\n\n.page__wrapper {\n    display: flex;\n    margin-top: 15px;\n}\n\n.page {\n    border: 1px solid black;\n    padding: 10px;\n}\n\n.current-page {\n    border: 2px solid green;\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}