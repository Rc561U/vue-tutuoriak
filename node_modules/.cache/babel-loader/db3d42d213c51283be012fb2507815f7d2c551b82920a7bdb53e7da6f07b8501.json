{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport PostList from \"@/components/PostList.vue\";\nimport PostForm from \"./components/PostForm.vue\";\nimport axios from 'axios';\nexport default {\n  components: {\n    PostList,\n    PostForm\n  },\n  data() {\n    return {\n      posts: [],\n      dialogVisible: false,\n      isPostLoading: false,\n      selectedSort: \"\",\n      sortOptions: [{\n        value: 'title',\n        name: 'By name'\n      }, {\n        value: 'body',\n        name: 'By content'\n      }],\n      searchQuery: \"\"\n    };\n  },\n  methods: {\n    createPost(post) {\n      this.posts.push(post);\n      this.dialogVisible = false;\n    },\n    removePost(post) {\n      this.dialogVisible = false;\n      this.posts = this.posts.filter(p => p.id !== post.id);\n    },\n    showDialog() {\n      this.dialogVisible = true;\n    },\n    async fetchPosts() {\n      try {\n        this.isPostLoading = true;\n        setTimeout(async () => {\n          const response = await axios.get('https://jsonplaceholder.typicode.com/posts?_limit=10');\n          this.posts = response.data;\n          this.isPostLoading = false;\n        }, 2000);\n      } catch (e) {\n        alert('Error');\n      } finally {}\n    }\n  },\n  mounted() {\n    this.fetchPosts();\n  },\n  // watch: {\n  //     selectedSort(newValue){\n  //         this.posts.sort((a,b) => {\n  //             return a[this.selectedSort]?.localeCompare(b[this.selectedSort])\n  //         })\n  //     }\n  // },\n  computed: {\n    sortedPosts() {\n      return [...this.posts].sort((post1, post2) => post1[this.selectedSort]?.localeCompare(post2[this.selectedSort]));\n    },\n    sortedAndSearchedPosts() {\n      return this.sortedPosts.filter(post => post.title.includes(this.searchQuery));\n    }\n  }\n};","map":{"version":3,"mappings":";AA+BA,OAAQA,QAAO,MAAQ,2BAA2B;AAClD,OAAQC,QAAO,MAAQ,2BAA2B;AAClD,OAAOC,KAAI,MAAO,OAAO;AAIzB,eAAe;EACXC,UAAU,EAAC;IACPH,QAAQ;IAAEC;EACd,CAAC;EACDG,IAAI,GAAG;IACH,OAAO;MACHC,KAAK,EAAE,EAAE;MACTC,aAAa,EAAE,KAAK;MACpBC,aAAa,EAAE,KAAK;MACpBC,YAAY,EAAE,EAAE;MAChBC,WAAW,EAAE,CACb;QAACC,KAAK,EAAC,OAAO;QAAEC,IAAI,EAAC;MAAS,CAAC,EAC/B;QAACD,KAAK,EAAC,MAAM;QAAEC,IAAI,EAAC;MAAY,EAC/B;MACDC,WAAW,EAAE;IACjB;EACJ,CAAC;EACDC,OAAO,EAAC;IACJC,UAAU,CAACC,IAAI,EAAC;MACZ,IAAI,CAACV,KAAK,CAACW,IAAI,CAACD,IAAI,CAAC;MACrB,IAAI,CAACT,aAAY,GAAI,KAAK;IAE9B,CAAC;IACDW,UAAU,CAACF,IAAI,EAAE;MACb,IAAI,CAACT,aAAY,GAAI,KAAK;MAC1B,IAAI,CAACD,KAAI,GAAI,IAAI,CAACA,KAAK,CAACa,MAAM,CAACC,KAAKA,CAAC,CAACC,EAAC,KAAML,IAAI,CAACK,EAAE;IACxD,CAAC;IACDC,UAAU,GAAG;MACT,IAAI,CAACf,aAAY,GAAI,IAAI;IAC7B,CAAC;IACD,MAAMgB,UAAU,GAAG;MACf,IAAG;QACC,IAAI,CAACf,aAAY,GAAI,IAAG;QACxBgB,UAAU,CAAC,YAAY;UACnB,MAAMC,QAAO,GAAI,MAAMtB,KAAK,CAACuB,GAAG,CAAC,sDAAsD,CAAC;UACxF,IAAI,CAACpB,KAAI,GAAImB,QAAQ,CAACpB,IAAI;UAC1B,IAAI,CAACG,aAAY,GAAI,KAAI;QAE7B,CAAC,EAAE,IAAI;MAEX,CAAC,QAAOmB,CAAC,EAAE;QACPC,KAAK,CAAC,OAAO;MACjB,UAAU,CACV;IACJ;EAGJ,CAAC;EACDC,OAAO,GAAG;IACF,IAAI,CAACN,UAAU,EAAE;EACrB,CAAC;EACL;EACA;EACA;EACA;EACA;EACA;EACA;EACAO,QAAQ,EAAE;IACNC,WAAW,GAAG;MACV,OAAO,CAAC,GAAG,IAAI,CAACzB,KAAK,CAAC,CAAC0B,IAAI,CAAC,CAACC,KAAK,EAACC,KAAK,KAAKD,KAAK,CAAC,IAAI,CAACxB,YAAY,CAAC,EAAE0B,aAAa,CAACD,KAAK,CAAC,IAAI,CAACzB,YAAY,CAAC,CAAC;IAClH,CAAC;IACD2B,sBAAsB,GAAG;MACrB,OAAO,IAAI,CAACL,WAAW,CAACZ,MAAM,CAACH,IAAG,IAAKA,IAAI,CAACqB,KAAK,CAACC,QAAQ,CAAC,IAAI,CAACzB,WAAW,CAAC;IAChF;EACJ;AACJ","names":["PostList","PostForm","axios","components","data","posts","dialogVisible","isPostLoading","selectedSort","sortOptions","value","name","searchQuery","methods","createPost","post","push","removePost","filter","p","id","showDialog","fetchPosts","setTimeout","response","get","e","alert","mounted","computed","sortedPosts","sort","post1","post2","localeCompare","sortedAndSearchedPosts","title","includes"],"sourceRoot":"","sources":["/home/hugeatom/Code/vue/want_money/src/App.vue"],"sourcesContent":["<template>\n<div class=\"app\">\n    <h1>Post page absolutely vue </h1>\n    <div class=\"app_btns\">\n        <my-button\n        class=\"btn_form_dialog\"\n        @click=\"showDialog\" \n        >Create post\n        </my-button>\n\n        <my-input v-model=\"searchQuery\" placeholder=\"Search\" style=\"width: 200px;d\"/>    \n\n        <my-dialog v-model:show=\"dialogVisible\" >\n            <post-form @create=\"createPost\"/>\n        </my-dialog>\n        <my-select v-model=\"selectedSort\" :options=\"sortOptions\"/>   \n    </div>\n    \n    \n    <post-list \n    v-bind:posts=\"sortedAndSearchedPosts\"\n    v-on:remove =\"removePost\"\n    v-if=\"!isPostLoading\"\n    />\n    <div v-else>Loading...</div>\n    \n</div>\n\n</template>\n\n<script>\nimport  PostList  from \"@/components/PostList.vue\";\nimport  PostForm  from \"./components/PostForm.vue\";\nimport axios from 'axios';\n\n\n\nexport default {\n    components:{\n        PostList, PostForm\n    },\n    data() {\n        return {\n            posts: [],\n            dialogVisible: false,\n            isPostLoading: false,\n            selectedSort: \"\",\n            sortOptions: [\n            {value:'title', name:'By name'},\n            {value:'body', name:'By content'}\n            ],\n            searchQuery: \"\",\n        }\n    },\n    methods:{\n        createPost(post){\n            this.posts.push(post);\n            this.dialogVisible = false;\n            \n        },\n        removePost(post) {\n            this.dialogVisible = false;\n            this.posts = this.posts.filter(p => p.id !== post.id)\n        },\n        showDialog() {\n            this.dialogVisible = true;\n        },\n        async fetchPosts() {\n            try{\n                this.isPostLoading = true\n                setTimeout(async () => {\n                    const response = await axios.get('https://jsonplaceholder.typicode.com/posts?_limit=10');\n                    this.posts = response.data; \n                    this.isPostLoading = false\n\n                }, 2000)\n               \n            }catch (e) {\n                alert('Error')\n            } finally {\n            }\n        },\n        \n        \n    },\n    mounted() {\n            this.fetchPosts();\n        },\n    // watch: {\n    //     selectedSort(newValue){\n    //         this.posts.sort((a,b) => {\n    //             return a[this.selectedSort]?.localeCompare(b[this.selectedSort])\n    //         })\n    //     }\n    // },\n    computed: {\n        sortedPosts() {\n            return [...this.posts].sort((post1,post2) => post1[this.selectedSort]?.localeCompare(post2[this.selectedSort]))\n        },\n        sortedAndSearchedPosts() {\n            return this.sortedPosts.filter(post => post.title.includes(this.searchQuery))\n        }\n    }\n}\n</script>\n\n<style>\n* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n.app{\n    padding: 20px;\n}\n\n.btn_form_dialog {\n    margin: 20px;\n    margin-left: 0;\n}\n\n.app_btns {\n    display: flex;\n    justify-content: space-between;\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}